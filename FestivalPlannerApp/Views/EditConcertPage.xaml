<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="FestivalPlannerApp.Views.EditConcertPage"
             xmlns:models="clr-namespace:FestivalPlannerApp.Models"
             xmlns:viewModels="clr-namespace:FestivalPlannerApp.ViewModels"
             x:DataType="viewModels:EditConcertViewModel"
             x:Name="EditConcertContentPage"
             Title=""         
             Shell.TabBarIsVisible="False">
    <ContentPage.Behaviors>
        <toolkit:EventToCommandBehavior 
            EventName="NavigatedTo"
            BindingContext="{Binding Path=BindingContext, Source={x:Reference EditConcertContentPage}, x:DataType=ContentPage}"
            Command="{Binding NavigatedToCommand}"/>
    </ContentPage.Behaviors>
    <Grid RowDefinitions="Auto,150,100,100,*"
          ColumnDefinitions="*,*"
          Padding="20"
          RowSpacing="0">
        <VerticalStackLayout Grid.ColumnSpan="2">
            <SearchBar x:Name="ArtistsSearchBar"
                        Placeholder="Search for an artist"
                        Text="{Binding SearchText, Mode=TwoWay}">
            </SearchBar>
            <CollectionView ItemsSource="{Binding ArtistsResult}">
            <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="models:Artist">
                        <Border Opacity="1"
                                BackgroundColor="Beige">
                            <Border.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding ArtistSelectionCommand, x:DataType=viewModels:EditConcertViewModel, Source={RelativeSource AncestorType={x:Type viewModels:EditConcertViewModel}}}"
                                                      CommandParameter="{Binding .}"/>
                            </Border.GestureRecognizers>
                            <HorizontalStackLayout>
                                <Image Source="{Binding Images[0].Url}"
                                            WidthRequest="65"
                                            HeightRequest="65"
                                            Aspect="AspectFill"/>
                                <Label Text="{Binding Name}"
                                        VerticalOptions="Center"/>
                            </HorizontalStackLayout>
                        </Border>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </VerticalStackLayout>
        <Picker Grid.Row="1"
                Grid.ColumnSpan="2"
                Title="Select stage"
                ItemsSource="{Binding Stages}"
                ItemDisplayBinding="{Binding Name, x:DataType=models:Stage}"
                SelectedItem="{Binding SelectedStage}"
                HorizontalOptions="Fill"
                HorizontalTextAlignment="Center"
                Margin="50"/>
        <DatePicker x:Name="DayPicker" 
                    Grid.Row="2"
                    Grid.ColumnSpan="2"
                    Date="{Binding SelectedDay.StartDateTime}"
                    HorizontalOptions="Center"
                    MinimumDate="{Binding CurrentFestival.StartDate}"
                    MaximumDate="{Binding CurrentFestival.EndDate}">
            <DatePicker.Behaviors>
                <toolkit:EventToCommandBehavior 
                    EventName="DateSelected"
                    BindingContext="{Binding Path=BindingContext, Source={x:Reference DayPicker}, x:DataType=DatePicker}"
                    Command="{Binding DateSelectionCommand}"/>
            </DatePicker.Behaviors>
        </DatePicker>
        <Border Grid.Row="3"
                Margin="10">
            <Picker x:Name="StartPicker" 
                    Title="Select start time"
                    ItemsSource="{Binding StartTimeSlots}"
                    ItemDisplayBinding="{Binding ., x:DataType=x:TimeSpan, StringFormat='{0:hh\\:mm}'}"
                    SelectedItem="{Binding SelectedStartTime}">
                <Picker.Behaviors>
                    <toolkit:EventToCommandBehavior 
                        EventName="SelectedIndexChanged"
                        BindingContext="{Binding Path=BindingContext, Source={x:Reference StartPicker}, x:DataType=Picker}"
                        Command="{Binding StartTimeSelectionCommand}"/>
                </Picker.Behaviors>
            </Picker>
        </Border>
        <Border Grid.Row="3"
                Grid.Column="1"
                Margin="10">
            <Picker x:Name="EndPicker" 
                    Title="Select end time"
                    ItemsSource="{Binding EndTimeSlots}"
                    ItemDisplayBinding="{Binding ., x:DataType=x:TimeSpan, StringFormat='{0:hh\\:mm}'}"
                    SelectedItem="{Binding SelectedEndTime}">
                <Picker.Behaviors>
                    <toolkit:EventToCommandBehavior 
                        EventName="SelectedIndexChanged"
                        BindingContext="{Binding Path=BindingContext, Source={x:Reference EndPicker}, x:DataType=Picker}"
                        Command="{Binding EndTimeSelectionCommand}"/>
                </Picker.Behaviors>
            </Picker>
        </Border>
        <Button Grid.Row="4"
                Text="Delete"
                VerticalOptions="Center"
                WidthRequest="100"
                FontSize="Medium"
                BackgroundColor="Salmon"
                Command="{Binding DeleteCommand}"/>
        <Button Grid.Row="4"
                Grid.Column="1"
                Text="Save"
                VerticalOptions="Center"
                WidthRequest="100"
                FontSize="Medium"
                Command="{Binding SaveCommand}"/>
    </Grid>
</ContentPage>