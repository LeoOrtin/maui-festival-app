# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI/CD MAUI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  
  setup:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    - name: Install .NET MAUI workloads
      run: dotnet workload install maui
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/FestivalPlannerApp.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

  build:
    name: Build MAUI for Android and IOS
    needs: [setup]
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: ['9.0.x']
        target-framework: [net9.0-android, net9.0-ios]
    steps:
    - name: Checkout code  
      uses: actions/checkout@v4
    - name: Restore dependencies
      run: dotnet restore FestivalPlannerApp/FestivalPlannerApp.csproj
    - name: Build
      run: dotnet build FestivalPlannerApp/FestivalPlannerApp.csproj --no-restore -f ${{ matrix.target-framework }}

  # test:
  #   needs: [build]
  #   runs-on: windows-latest
  #   steps:
  #   - name: Checkout code  
  #     uses: actions/checkout@v4
  #   - name: Restore dependencies
  #     run: dotnet restore FestivalPlannerAppTest/FestivalPlannerAppTest.csproj
  #   - name: Test
  #     run: dotnet test
  #     working-directory: ./FestivalPlannerAppTest

  analysis:
    needs: [build]
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout code  
      uses: actions/checkout@v4 
      # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
    # - name: Autobuild
    #   uses: github/codeql-action/autobuild@v3
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  deploy:
    name: Deploy
    # The job needs the test job to pass first
    needs: [ analysis ]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: echo Deploying to development
